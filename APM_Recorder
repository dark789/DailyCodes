import wx
import threading
import time
from pynput import keyboard
class MyFrame(wx.Frame):
    def __init__(self):
        wx.Frame.__init__(self, None , title="APM RECORDING", size=(150,100),style=wx.SYSTEM_MENU|wx.CAPTION|wx.MINIMIZE_BOX|wx.CLOSE_BOX|wx.STAY_ON_TOP)
        self.panel=wx.Panel(self)

        #global variable
        self.time=0  #record type times
        self.a0=0
        self.apm=threading.Thread(target=self.apmre,daemon=True)
        self.apm.start()
        self.apm0=threading.Thread(target=self.apmre0,daemon=True)
        self.apm0.start()
        self.thread_typer=keyboard.Listener(on_press=self.typeadd,daemon=True)
        self.thread_typer.start()
        

        #contrust frame
        wx.StaticText(self.panel,-1,label="APM:",pos=(0,0))
        self.txt=wx.StaticText(self.panel,-1,label="0",pos=(50,0))

    def typeadd(self,key):
        self.time+=1
    def apmre(self):
        i=0
        a0=self.a0
        bc1=[]
        bc2=[]
        while i<50:
            time.sleep(0.1)
            a1=self.time
            apm=(a1-a0)/(0.1*(i+1)/60)
            bc1.append(a1)
            self.txt.SetLabel(str(int(apm)))
            i+=1
        while 1:
            if i==50:
                time.sleep(0.1)
                i=0
                bc2=list(bc1)
                bc1[i]=self.time
                apm=(bc1[i]-bc2[i])/(5/60)
                self.txt.SetLabel(str(int(apm)))
                i+=1
            else:
                time.sleep(0.1)
                bc1[i]=self.time
                apm=(bc1[i]-bc2[i])/(5/60)
                self.txt.SetLabel(str(int(apm)))
                i+=1
    def apmre0(self):
        while 1:
            time.sleep(10)
            self.a0=self.time
app=wx.App()
fra=MyFrame()
fra.Show()
app.MainLoop()
